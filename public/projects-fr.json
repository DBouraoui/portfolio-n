[
  {
    "title": "My Event",
    "subTitle": "Application web pour créer et rejoindre des événements via OAuth2.",
    "description": "My Event permet aux utilisateurs de créer, rejoindre et visualiser des événements proches de leur localisation. L'inscription et la connexion se font uniquement via Google ou GitHub. Les événements sont affichés sur une carte et la validation des données est gérée avec Zod.",
    "tags": ["Web", "Next.js", "Frontend", "Backend", "Event Management"],
    "technologies": ["Next.js", "Prisma", "TailwindCSS", "Zod", "MySQL"],
    "creationDate": "24-04-2025",
    "timeToDev": "4 semaines",
    "caliopiSkills": ["Gestion de projet", "Développement Backend", "Développement Frontend", "Intégration OAuth2", "Gestion de base de données"],
    "links": {
      "github": "https://github.com/DBouraoui/my-event",
      "live": null
    },
    "images": {
      "card": "img/my-event-1.png",
      "carousel": [
        "img/my-event-1.png",
        "img/my-event-2.png",
        "img/my-event-3.png",
        "img/my-event-4.png"
      ]
    }
  },
  {
    "title": "Driving School",
    "subTitle": "Application interne de gestion pour une auto-école.",
    "description": "Ce projet est une application interne développée avec Django, permettant de gérer les élèves, les moniteurs et les administrateurs d'une auto-école. Les élèves peuvent accéder à un code en ligne, réserver des leçons de conduite avec leur moniteur attitré, et suivre leur progression. Les moniteurs peuvent ajouter de nouveaux élèves, valider les leçons, tandis que les administrateurs gèrent l'ensemble de la plateforme, créent des cours de code et supervisent l'organisation.",
    "tags": ["Web", "Django", "Backend"],
    "technologies": ["Python", "Django", "HTML", "Tawilwind", "SQLite"],
    "creationDate": "05-05-2025",
    "timeToDev": "4 semaines",
    "caliopiSkills": [
      "Développement Backend",
      "Gestion des rôles et permissions",
      "Analyse des besoins",
      "Gestion de projet",
      "Templating Frontend"
    ],
    "links": {
      "github": "https://github.com/DBouraoui/driving-school",
      "live": null
    },
    "images": {
      "card": "img/driving-school-1.png",
      "carousel": [
        "img/driving-school-1.png",
        "img/driving-school-2.png",
        "img/driving-school-3.png",
        "img/driving-school-4.png"
      ]
    }
  },
  {
    "title": "Beta series",
    "subTitle": "Application web pour suivre et partager ses séries TV avec ses amis.",
    "description": "Beta series permet aux utilisateurs de connecter leur compte BetaSeries pour suivre les séries qu'ils regardent et partager leur progression avec leurs amis. L'interface est entièrement réalisée en Vue.js et TailwindCSS.",
    "tags": ["Web", "Vue.js", "Frontend", "API Integration", "Series Tracking"],
    "technologies": ["Vue.js 3", "TailwindCSS", "Axios", "BetaSeries API"],
    "creationDate": "14-07-2024",
    "timeToDev": "3 semaines",
    "caliopiSkills": ["Développement Frontend", "Intégration API", "Gestion des utilisateurs"],
    "links": {
      "github": "https://github.com/DBouraoui/beta-series"
    },
    "images": {
      "card": "img/beta-series-1.png",
      "carousel": ["img/beta-series-1.png"]
    }
  },
  {
    "title": "Chat-IRC",
    "subTitle": "Application de chat en temps réel inspirée de Slack et Discord",
    "description": "Chat-IRC permet de créer et rejoindre des channels, envoyer des messages privés, modérer des channels et interagir en direct grâce à Socket.io. Le front est en React avec TailwindCSS et le back en Node.js avec Sequelize et SQLite3.",
    "tags": ["Web", "React", "Realtime", "Chat"],
    "technologies": ["React", "Node.js", "Socket.io", "Sequelize", "SQLite3", "TailwindCSS"],
    "creationDate": "02-07-2024",
    "timeToDev": "2 semaines",
    "caliopiSkills": ["Gestion de projet", "Développement Frontend", "Développement Backend", "Realtime Communication", "Base de données"],
    "links": {
      "github": "https://github.com/DBouraoui/chat-irc",
      "live": "https://monchatirc.com"
    },
    "images": {
      "card": "img/chat-irc-1.png",
      "carousel": ["img/chat-irc-1.png","img/chat-irc-2.png","img/chat-irc-3.png"]
    }
  },
  {
    "title": "PhaserJs - Jeu 2D Recherche d’Alternance",
    "subTitle": "Un jeu vidéo en 2D gamifiant la recherche d’alternance",
    "description": "Projet réalisé avec Phaser.js pour créer un jeu vidéo en 2D sur le thème de la recherche d’alternance. Le joueur peut choisir entre 3 personnages aux compétences différentes, traverser plusieurs scènes avec dialogues et combats d’entretien, affronter des recruteurs PNJ posant des questions techniques, et vivre différentes fins selon ses choix et réussites. Le jeu inclut une bande-son immersive, des dialogues scénarisés, ainsi qu’un système de fins multiples allant de l’échec (endgame si trop d’entretiens échoués) à la réussite (happy end avec signature d’un contrat).",
    "tags": ["Jeu Vidéo", "Phaser.js", "JavaScript"],
    "technologies": ["Phaser.js", "JavaScript ES6", "HTML5 Canvas", "CSS"],
    "creationDate": "10-04-2024",
    "timeToDev": "2 semaines",
    "caliopiSkills": [
      "Conception de jeu",
      "Programmation JavaScript",
      "Gestion de scènes et interactions",
      "Gamification",
      "Gestion de dialogues et choix multiples",
      "Intégration audio"
    ],
    "links": {
      "github": "https://github.com/DBouraoui/phaser-js",
      "live": "https://webac-jsf-display.vercel.app/dylan"
    },
    "images": {
      "card": "img/phaser-1.png",
      "carousel": [
        "img/phaser-1.png",
        "img/phaser-2.png",
        "img/phaser-3.jpeg",
        "img/phaser-4.jpeg",
        "img/phaser-5.jpeg"
      ]
    }
  },
  {
    "title": "Mon Portfolio",
    "subTitle": "Un portfolio moderne réalisé avec Nuxt.js et TailwindCSS",
    "description": "Ce projet est mon portfolio personnel, développé avec Nuxt.js, TailwindCSS et NuxtUI pour certains composants. Il permet de présenter mes projets, mes compétences et mon parcours de manière claire et moderne, avec une interface responsive et élégante. L'objectif est de mettre en valeur mon travail en tant que développeur full-stack, tout en offrant une navigation fluide et intuitive.",
    "tags": ["Web", "Nuxt", "Frontend"],
    "technologies": ["Nuxt 3", "Vue 3", "TailwindCSS", "NuxtUI"],
    "creationDate": "19-08-2025",
    "timeToDev": "3 semaines",
    "caliopiSkills": [
      "Conception UI/UX",
      "Développement Frontend",
      "Intégration TailwindCSS",
      "Utilisation de composants NuxtUI"
    ],
    "links": {
      "github": "https://github.com/DBouraoui/portfolio-n",
      "live": null
    },
    "images": {
      "card": "img/portfolio-1.png",
      "carousel": [
        "img/portfolio-1.png",
        "img/portfolio-2.png"
      ]
    }
  },
  {
    "title": "Reborn Slayer",
    "subTitle": "Un jeu vidéo 3D immersif réalisé avec Ruby on Rails et Three.js",
    "description": "Reborn Slayer est un jeu vidéo en 3D où le joueur choisit un personnage pour vivre une aventure remplie de quêtes, de combats contre PNJ et créatures, et de gestion de ressources. Le jeu propose un inventaire complet, une monnaie virtuelle et une boutique pour acheter des objets. Développé avec Ruby on Rails pour la logique métier et Three.js pour l’univers en 3D, il offre une expérience interactive et immersive.",
    "tags": ["Jeu vidéo", "3D", "Rails", "Three.js"],
    "technologies": ["Ruby on Rails", "Three.js", "MYSQL8.0"],
    "creationDate": "05-05-2025",
    "timeToDev": "4 semaines",
    "caliopiSkills": ["Développement Back-end", "Programmation 3D", "Gestion de base de données", "Conception d'interface interactive"],
    "links": {
      "github": "https://github.com/DBouraoui/rebornSlayer",
      "live": null
    },
    "images": {
      "card": "img/reborn-1.png",
      "carousel": [
        "img/reborn-1.png",
        "img/reborn-2.png",
        "img/reborn-3.png",
        "img/reborn-4.png",
        "img/reborn-5.png",
        "img/reborn-6.png",
        "img/reborn-7.png"
      ]
    }
  },
  {
    "title": "Le camion du chef",
    "subTitle": "Un site vitrine et un panneau d'administration pour un foodtruck",
    "description": "Ce projet est un site web réalisé en Symfony avec Twig et Tailwind, hébergé sur un VPS. Côté public, il permet aux clients de découvrir l’histoire du foodtruck, de consulter la carte des menus mise à jour, de voir les événements, les horaires d’ouverture et de contacter le propriétaire. Côté administration, un tableau de bord complet permet de gérer facilement le contenu : ajout et modification des menus, mise à jour des horaires, gestion des emplacements d’ouverture, ainsi que modification des photos et événements. L’ensemble offre une solution clé en main, moderne et responsive pour un foodtruck basé dans le sud de la France.",
    "tags": ["Web", "Symfony", "Admin Panel", "Foodtruck"],
    "technologies": ["Symfony", "Twig", "TailwindCSS", "MySQL", "VPS"],
    "creationDate": "07-03-2025",
    "timeToDev": "2 semaines",
    "caliopiSkills": ["Développement Back-end", "Intégration Frontend", "Administration de serveur", "Conception UI/UX"],
    "links": {
      "github": "https://github.com/DBouraoui/leCamionDuChef#",
      "live": "https://lecamionduchef.fr/"
    },
    "images": {
      "card": "img/camion-1.png",
      "carousel": [
        "img/camion-1.png",
        "img/camion-2.png",
        "img/camion-3.png",
        "img/camion-4.png",
        "img/camion-5.png"
      ]
    }
  },
  {
    "title": "Symfony 7.3 Boilerplate API REST",
    "subTitle": "Un boilerplate complet et moderne pour démarrer rapidement une API REST sécurisée",
    "description": "Ce projet est un boilerplate construit avec Symfony 7.3, pensé pour créer des APIs REST robustes, sécurisées et prêtes à l'emploi. Il inclut l’inscription, la connexion avec JWT, la validation d’email, la réinitialisation de mot de passe, ainsi qu’un système de rate limiter pour protéger contre les attaques par force brute. L’envoi d’emails est géré de manière asynchrone grâce à Messenger et Mailer. Le projet suit les bonnes pratiques SOLID, utilise des EventSubscriber pour la logique événementielle, et intègre Monolog pour tracer les logs des différentes actions. L’ensemble est documenté et livré avec des tests unitaires et fonctionnels, ainsi que des scénarios prêts à l’emploi dans BRUNO. L’environnement de développement est fourni via Docker Compose, incluant PostgreSQL, Adminer et Caddy avec FrankenPHP pour remplacer PHP-FPM (meilleures performances et compatibilité avec Mercure pour des futures notifications en temps réel). Pour la production, le boilerplate inclut Grafana pour la supervision et peut être déployé avec Docker Swarm (configuration additionnelle requise).",
    "tags": ["API", "Symfony", "Docker", "JWT", "DevOps"],
    "technologies": [
      "Symfony 7.3",
      "API Platform",
      "PostgreSQL",
      "Caddy",
      "FrankenPHP",
      "Docker Compose",
      "Grafana",
      "Adminer",
      "Messenger",
      "Monolog",
      "JWT"
    ],
    "creationDate": "06-2025",
    "timeToDev": "3 semaines",
    "caliopiSkills": [
      "Développement Back-end",
      "Sécurité des applications",
      "Tests unitaires et fonctionnels",
      "DevOps et Docker",
      "Documentation technique"
    ],
    "links": {
      "github": "https://github.com/DBouraoui/Boilerplate-symfony",
      "live": null
    },
    "images": {
      "card": "img/symfony.png",
      "carousel": [
      "img/symfony.png"
      ]
    }
  },
  {
    "title": "Projet de fin d'année - Mobalpa Marseille",
    "subTitle": "Développement d’un site e-commerce vitrine et administrateur pour Mobalpa Marseille",
    "description": "Dans le cadre du projet de fin de 1ère année à Epitech, en partenariat avec Mobalpa Marseille, notre équipe de 4 étudiants a conçu et développé un site web complet en 6 semaines effectives. Le projet comprenait un site vitrine e-commerce permettant aux clients de consulter et filtrer rapidement les électroménagers, pièces aménagées (chambres, salles d’eau, dressings…), ainsi qu’une carte interactive pour localiser les magasins, une page de contact et une section retraçant l’histoire de l’entreprise. Du côté administrateur, un panel complet permettait de gérer les commandes, paiements, promotions et contenu du site. Le projet a nécessité un important travail de préparation technique et organisationnel : recherche et intégration des visuels produits, création de l’ensemble des données, répartition des rôles et mise en place des bonnes pratiques collaboratives. Réalisé en React et Tailwind pour le front et Symfony en API REST pour le back-end.",
    "tags": ["Web", "E-commerce", "React", "Symfony", "Projet étudiant"],
    "technologies": ["React", "TailwindCSS", "Symfony", "API REST", "MYSQL8.0"],
    "creationDate": "2023-06-15",
    "timeToDev": "6 semaines",
    "caliopiSkills": [
      "Travail en équipe",
      "Organisation de projet",
      "Développement Frontend",
      "Développement Backend",
      "Gestion de données"
    ],
    "links": {
      "github": "https://github.com/dylanepitech/archideco-front",
      "live": null
    },
    "images": {
      "card": "img/archideco-1.png",
      "carousel": [
        "img/archideco-1.png",
        "img/archideco-2.png",
        "img/archideco-3.png",
        "img/archideco-4.png",
        "img/archideco-5.png"
      ]
    }
  }
]
